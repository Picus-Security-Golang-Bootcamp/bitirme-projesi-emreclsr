{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is a sample of e-commerce API.",
        "title": "Picus Final Project",
        "contact": {
            "name": "Emre Çalışır"
        },
        "version": "1.0"
    },
    "paths": {
        "/basket": {
            "get": {
                "security": [
                    {
                        "TokenJWT": []
                    }
                ],
                "description": "Get basket",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Basket"
                ],
                "summary": "Get basket",
                "responses": {
                    "200": {
                        "description": "basket is empty"
                    },
                    "401": {
                        "description": "You are not authorized for this action"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "TokenJWT": []
                    }
                ],
                "description": "Update basket",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Basket"
                ],
                "summary": "Update basket",
                "parameters": [
                    {
                        "description": "Basket",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/basket.Basket"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "item added successfully"
                    },
                    "401": {
                        "description": "You are not authorized for this action"
                    },
                    "422": {
                        "description": "Not enough stock from product"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "TokenJWT": []
                    }
                ],
                "description": "Create an order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Basket"
                ],
                "summary": "Create an order",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/order.Order"
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "You are not authorized for this action"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/category": {
            "get": {
                "description": "Get all categories",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Get all categories",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/category.Category"
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "TokenJWT": []
                    }
                ],
                "description": "Create categories from csv",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Create categories from csv",
                "parameters": [
                    {
                        "type": "file",
                        "description": "csv",
                        "name": "csv",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Categories created successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "User",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Logged in successfully"
                    },
                    "401": {
                        "description": "Username or password is incorrect"
                    },
                    "422": {
                        "description": "Invalid JSON provided for login"
                    },
                    "500": {
                        "description": "Error getting user while logging in"
                    }
                }
            }
        },
        "/order": {
            "get": {
                "security": [
                    {
                        "TokenJWT": []
                    }
                ],
                "description": "Get all orders",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Get all orders",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/order.Order"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/order/{id}": {
            "put": {
                "security": [
                    {
                        "TokenJWT": []
                    }
                ],
                "description": "Cancel order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Cancel order",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order canceled"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/product": {
            "get": {
                "description": "Get products with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Get products with pagination",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "sort",
                        "name": "sort",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pagination.Pagination"
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "TokenJWT": []
                    }
                ],
                "description": "Create a new product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Create a new product",
                "parameters": [
                    {
                        "description": "Product",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/product.Product"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/product.Product"
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "You are not authorized to perform this action"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/product/{id}": {
            "put": {
                "security": [
                    {
                        "TokenJWT": []
                    }
                ],
                "description": "Update products",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Update products",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Product",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/product.Product"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/product.Product"
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "You are not authorized to perform this action"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "TokenJWT": []
                    }
                ],
                "description": "Delete products",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Delete products",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product deleted"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "You are not authorized to perform this action"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/product/{word}": {
            "get": {
                "description": "Search products",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Search products",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search word",
                        "name": "word",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/product.Product"
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/user": {
            "post": {
                "description": "SignUp",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NewUser"
                ],
                "summary": "SignUp",
                "parameters": [
                    {
                        "description": "User",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.User"
                        }
                    },
                    "409": {
                        "description": "User already exists"
                    },
                    "422": {
                        "description": "Invalid JSON provided for signup"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        }
    },
    "definitions": {
        "basket.Basket": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "example": [
                        1,
                        2,
                        3
                    ]
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "product_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "example": [
                        1,
                        2,
                        3
                    ]
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/product.Product"
                    }
                },
                "total_price": {
                    "type": "number",
                    "example": 999.99
                },
                "updatedAt": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/user.User"
                },
                "user_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "category.Category": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "product": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/product.Product"
                    }
                },
                "type": {
                    "type": "string",
                    "example": "test type"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "gorm.DeletedAt": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        },
        "order.Order": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "example": [
                        1,
                        2,
                        3
                    ]
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "is_canceled": {
                    "type": "boolean",
                    "example": false
                },
                "line_total": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    },
                    "example": [
                        1.99,
                        2.99,
                        3.99
                    ]
                },
                "product_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "example": [
                        1,
                        2,
                        3
                    ]
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/product.Product"
                    }
                },
                "total_price": {
                    "type": "number",
                    "example": 999.99
                },
                "updatedAt": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/user.User"
                },
                "user_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "pagination.Pagination": {
            "type": "object",
            "properties": {
                "first_page": {
                    "type": "string"
                },
                "from_row": {
                    "type": "integer"
                },
                "last_page": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "next_page": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                },
                "previous_page": {
                    "type": "string"
                },
                "rows": {},
                "searchs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pagination.Search"
                    }
                },
                "sort": {
                    "type": "string"
                },
                "to_row": {
                    "type": "integer"
                },
                "total_pages": {
                    "type": "integer"
                },
                "total_rows": {
                    "type": "integer"
                },
                "url_path": {
                    "type": "string"
                }
            }
        },
        "pagination.Search": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string"
                },
                "column": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                }
            }
        },
        "product.Product": {
            "type": "object",
            "required": [
                "name",
                "price",
                "stock",
                "type"
            ],
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "example": "product name"
                },
                "price": {
                    "type": "number",
                    "example": 99.99
                },
                "stock": {
                    "type": "integer",
                    "example": 10
                },
                "type": {
                    "type": "string",
                    "example": "category"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "user.User": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "address": {
                    "type": "string",
                    "example": "Test Address"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "email": {
                    "type": "string",
                    "example": "test@tst.com"
                },
                "full_name": {
                    "type": "string",
                    "example": "Test User"
                },
                "id": {
                    "type": "integer"
                },
                "password": {
                    "type": "string",
                    "example": "password"
                },
                "phone": {
                    "type": "string",
                    "example": "+05341234567"
                },
                "role": {
                    "type": "string",
                    "example": "admin"
                },
                "status": {
                    "type": "string",
                    "example": "active"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "TokenJWT": {
            "type": "apiKey",
            "name": "TokenJWT",
            "in": "header"
        }
    }
}